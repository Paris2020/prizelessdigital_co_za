/* Import variables, abstractions, base styles and components using globbing.

 Globbing will always import files alphabetically. Optimally, all your
 components should be self-contained and explicit enough to not have any
 contained styles leak into unrelated components: The import order should not
 affect the result.

 If there are variables, functions or mixins that depend on each other and
 therefore need to be imported in a specific order you can import them
 directly. Variables-, function- or mixin providing partials should never
 output any styles themselves: Importing them multiple times to resolve
 dependencies shouldn't be a problem.
*/
@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,300,600,700);
@import url(@fortawesome/fontawesome-free/css/all.min.css);
.grid {
  padding: 10px;
  background-color: #dddddd;
}

*:focus {
  outline: 0;
}

.grippie {
  display: none;
}

button,
input[type="button"],
input[type="reset"],
input[type="submit"],
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"] {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

button,
input[type="button"],
input[type="submit"] {
  background-color: rgba(0, 0, 0, 0);
  border: 1.5px solid;
  color: #055885;
  font-weight: 600;
  border-radius: 20px;
  display: inline-block;
  font-size: 15px;
  letter-spacing: 0.05em;
  cursor: pointer;
  -webkit-transition: all 0.3s ease;
  transition: all 0.3s ease;
  line-height: 1em;
  padding: 12px 30px;
}

button:hover,
input[type="button"]:hover,
input[type="submit"]:hover {
  background-color: rgba(5, 88, 133, 0.2);
  text-decoration: none;
}

input[type="text"].form-control,
input[type="password"],
input[type="email"],
textarea {
  max-width: 100%;
}

input[type="text"].form-control,
input[type="password"].form-control,
input[type="email"].form-control,
textarea {
  background-color: #fff;
  border-color: #dddddd;
  border-style: solid;
  border-width: 1px;
  color: #000;
  border-radius: 20px;
  font-size: 14px;
  line-height: 1em;
}

input[type="text"].form-control:focus,
input[type="password"].form-control:focus,
input[type="email"].form-control:focus,
textarea:focus {
  border-color: #055885;
}

input[type="text"].form-control.error,
input[type="password"].form-control.error,
input[type="email"].form-control.error,
textarea.error {
  border: 1px solid #d52a32 !important;
}

input[type="checkbox"].error + label.option span,
input[type="radio"].error + label.option span {
  border: 1px solid #d52a32;
}

label {
  font-weight: 600;
  margin-bottom: 5px;
}

.form-required {
  color: #d52a32;
}

textarea {
  max-width: 100%;
  min-height: 400px;
}

.form-wrapper {
  max-width: 35%;
  display: block;
  margin: 0 auto;
  -webkit-box-shadow: 2px 5px 20px #a09d9d;
          box-shadow: 2px 5px 20px #a09d9d;
}

.form-wrapper .form-header {
  background-color: #156ebb;
  padding: 20px;
}

.form-wrapper .form-header h2, .form-wrapper .form-header p {
  color: #fff;
  font-family: "open-sans", Arial, "Helvetica Neue", Helvetica, sans-serif;
  font-style: normal;
  font-weight: 700;
}

.form-wrapper .form-body {
  padding: 20px;
}

.form-wrapper .form-body form .input-wrapper {
  margin-bottom: 20px;
}

.form-wrapper .form-body form .btn-wrapper {
  text-align: center;
}

a,
a:link,
a:visited {
  text-decoration: none;
  color: #bc3869;
}

a:hover,
a:link:hover,
a:visited:hover {
  color: #ce5985;
  text-decoration: none;
}

a:hover img,
a:link:hover img,
a:visited:hover img {
  opacity: 0.75;
}

a.btn-danger {
  background-color: rgba(0, 0, 0, 0);
  border: 1.5px solid;
  color: #d52a32;
  font-weight: 600;
  border-radius: 20px;
  display: inline-block;
  font-size: 15px;
  letter-spacing: 0.05em;
  cursor: pointer;
  -webkit-transition: all 0.3s ease;
  transition: all 0.3s ease;
  line-height: 1em;
  padding: 12px 30px;
}

a.btn-danger:hover {
  background-color: rgba(213, 42, 50, 0.2);
  text-decoration: none;
}

ul, ol {
  margin-bottom: 20px;
}

ul li, ol li {
  position: relative;
  left: 20px;
  margin-bottom: 6px;
}

html {
  font-family: 'Open Sans',Helvetica, Arial, sans-serif;
  font-weight: 400;
  font-size: 18px;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: #000;
  font-family: "Open Sans";
}

h1 {
  font-size: 36px;
}

h2 {
  font-size: 24px;
}

h3 {
  font-size: 16px;
  font-family: 'Open Sans',Helvetica, Arial, sans-serif;
  font-weight: 400;
}

h4 {
  text-transform: uppercase;
  line-height: 20px;
  height: 30px;
}

h5 {
  font-weight: bold;
  line-height: 2.5;
  height: 60px;
  text-align: center;
  font-size: 30px;
}

b, strong {
  font-weight: bold;
}

em {
  font-style: italic;
}

p {
  font-family: "Open Sans";
  font-size: 16px;
  font-weight: 100;
  line-height: 24px;
  margin: 20px 0;
}

sup, sub {
  font-size: 75% !important;
}

header, footer {
  text-align: center;
}

header .inner, main .inner, footer .inner {
  margin: 20px;
}

/* No files to import found in pages//* */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
