/* Import variables, abstractions, base styles and components using globbing.

 Globbing will always import files alphabetically. Optimally, all your
 components should be self-contained and explicit enough to not have any
 contained styles leak into unrelated components: The import order should not
 affect the result.

 If there are variables, functions or mixins that depend on each other and
 therefore need to be imported in a specific order you can import them
 directly. Variables-, function- or mixin providing partials should never
 output any styles themselves: Importing them multiple times to resolve
 dependencies shouldn't be a problem.
*/
@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,300,600,700);
.grid {
  padding: 10px;
  background-color: #dddddd;
}

*:focus {
  outline: 0;
}

.grippie {
  display: none;
}

button,
input[type="button"],
input[type="reset"],
input[type="submit"],
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"] {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

button,
input[type="button"],
input[type="submit"] {
  background-color: rgba(0, 0, 0, 0);
  border: 1.5px solid;
  color: #055885;
  font-weight: 600;
  border-radius: 20px;
  display: inline-block;
  font-size: 15px;
  letter-spacing: 0.05em;
  cursor: pointer;
  -webkit-transition: all 0.3s ease;
  transition: all 0.3s ease;
  line-height: 1em;
  padding: 12px 30px;
}

button:hover,
input[type="button"]:hover,
input[type="submit"]:hover {
  background-color: rgba(5, 88, 133, 0.2) !important;
  text-decoration: none;
}

input[type="text"].form-control,
input[type="password"],
input[type="email"],
textarea {
  max-width: 100%;
}

input[type="text"].form-control,
input[type="password"].form-control,
input[type="email"].form-control,
textarea {
  background-color: #fff;
  border-color: #dddddd;
  border-style: solid;
  border-width: 1px;
  color: #000;
  border-radius: 20px;
  font-size: 14px;
  line-height: 1em;
}

input[type="text"].form-control:focus,
input[type="password"].form-control:focus,
input[type="email"].form-control:focus,
textarea:focus {
  border-color: #055885;
}

input[type="text"].form-control.error,
input[type="password"].form-control.error,
input[type="email"].form-control.error,
textarea.error {
  border: 1px solid #d52a32 !important;
}

input[type="checkbox"].error + label.option span,
input[type="radio"].error + label.option span {
  border: 1px solid #d52a32;
}

label {
  font-weight: 600;
  margin-bottom: 5px;
}

.form-required {
  color: #d52a32;
}

textarea {
  max-width: 100%;
  min-height: 400px;
}

.form-wrapper {
  max-width: 35%;
  display: block;
  margin: 0 auto;
  -webkit-box-shadow: 2px 5px 20px #a09d9d;
          box-shadow: 2px 5px 20px #a09d9d;
}

.form-wrapper.signup .form-header {
  background-color: #156ebb;
}

.form-wrapper.signin .form-header {
  background-color: #bc3869;
}

.form-wrapper .form-header {
  padding: 20px;
}

.form-wrapper .form-header h2, .form-wrapper .form-header p {
  color: #fff;
  font-family: "open-sans", Arial, "Helvetica Neue", Helvetica, sans-serif;
  font-style: normal;
  font-weight: 700;
}

.form-wrapper .form-body {
  padding: 20px;
}

.form-wrapper .form-body form .input-wrapper {
  margin-bottom: 20px;
}

.form-wrapper .form-body form .btn-wrapper {
  text-align: center;
}

.form-wrapper .form-body form .btn-wrapper input, .form-wrapper .form-body form .btn-wrapper span, .form-wrapper .form-body form .btn-wrapper a {
  margin: 0 auto 10px;
}

a,
a:link,
a:visited {
  text-decoration: none;
  color: #bc3869;
}

a:hover,
a:link:hover,
a:visited:hover {
  color: #ce5985;
  text-decoration: none;
}

a:hover img,
a:link:hover img,
a:visited:hover img {
  opacity: 0.75;
}

a.btn-danger {
  background-color: rgba(0, 0, 0, 0);
  border: 1.5px solid;
  color: #d52a32;
  font-weight: 600;
  border-radius: 20px;
  display: inline-block;
  font-size: 15px;
  letter-spacing: 0.05em;
  cursor: pointer;
  -webkit-transition: all 0.3s ease;
  transition: all 0.3s ease;
  line-height: 1em;
  padding: 12px 30px;
}

a.btn-danger:hover {
  background-color: rgba(213, 42, 50, 0.2) !important;
  text-decoration: none;
}

ul, ol {
  margin-bottom: 20px;
}

ul li, ol li {
  position: relative;
  left: 20px;
  margin-bottom: 6px;
}

html {
  font-family: 'Open Sans',Helvetica, Arial, sans-serif;
  font-weight: 400;
  font-size: 18px;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: #000;
  font-family: "Open Sans";
}

h1 {
  font-size: 36px;
}

h2 {
  font-size: 24px;
}

h3 {
  font-size: 16px;
  font-family: 'Open Sans',Helvetica, Arial, sans-serif;
  font-weight: 400;
}

h4 {
  text-transform: uppercase;
  line-height: 20px;
  height: 30px;
}

h5 {
  font-weight: bold;
  line-height: 2.5;
  height: 60px;
  text-align: center;
  font-size: 30px;
}

b, strong {
  font-weight: bold;
}

em {
  font-style: italic;
}

p {
  font-family: "Open Sans";
  font-size: 16px;
  font-weight: 100;
  line-height: 24px;
  margin: 20px 0;
}

sup, sub {
  font-size: 75% !important;
}

header, footer {
  text-align: center;
}

header .inner, main .inner, footer .inner {
  margin: 20px;
}

/* No files to import found in pages//* */

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlcy5zY3NzIiwic3R5bGVzLmNzcyIsImJhc2UvX3R5cG9ncmFwaHkuc2NzcyIsInNldHRpbmdzL19ncmlkLnNjc3MiLCJzZXR0aW5ncy9fY29sb3JzLnNjc3MiLCJiYXNlL19mb3Jtcy5zY3NzIiwiYmFzZS9fYnV0dG9ucy5zY3NzIiwidXRpbC9fbWl4aW5zX2xlZ2FjeS5zY3NzIiwic2V0dGluZ3MvX2ZvbnRzLnNjc3MiLCJiYXNlL19saW5rcy5zY3NzIiwiYmFzZS9fbGlzdHMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQTs7Ozs7Ozs7Ozs7O0NDUUM7QUNURCw4RUFBWTtBQ0laO0VBQ0UsYUFBYTtFQUNiLHlCQ0pZO0FIWWQ7O0FJZkE7RUFDRSxVQUFVO0FKa0JaOztBSVpBO0VBQ0UsYUFBYTtBSmVmOztBSVZBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7RUFtQkUsd0JBQWdCO0tBQWhCLHFCQUFnQjtVQUFoQixnQkFBZ0I7QUpZbEI7O0FJVEE7OztFQ2pDRSxrQ0FBa0M7RUFDbEMsbUJBQW1CO0VBQ25CLGNGRVk7RUVEWixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLHFCQUFxQjtFQUNyQixlQVAwQztFQVExQyxzQkFBc0I7RUFDdEIsZUFBZTtFQ0FmLGlDQUFZO0VBQVoseUJBQVk7RURFWixnQkFBZ0I7RUFDaEIsa0JBWjhEO0FMNERoRTs7QUsvQ0U7OztFQUNFLGtEQUE4QztFQUM5QyxxQkFBcUI7QUxvRHpCOztBSXZCQTs7OztFQUtFLGVBQWU7QUp5QmpCOztBSW5CQTs7OztFRS9CRSxzQkFBc0I7RUFDdEIscUJIdkJZO0VHd0JaLG1CQUFtQjtFQUNuQixpQkFBaUI7RUFDakIsV0g1QlU7RUc2QlYsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZixnQkFBZ0I7QU55RGxCOztBTXhERTs7OztFQUNFLHFCSDVCVTtBSDBGZDs7QUl4Q0E7Ozs7RUFPSSxvQ0FBaUM7QUp3Q3JDOztBSWxDQTs7RUFHRSx5QkRuRVc7QUh1R2I7O0FJL0JBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtBSmtDcEI7O0FJN0JBO0VBQ0UsY0RoRlc7QUhnSGI7O0FJM0JBO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQjtBSjhCbkI7O0FJdEJBO0VBQ0UsY0FBYztFQUNkLGNBQWM7RUFDZCxjQUFjO0VBQ2Qsd0NEbEZnQjtVQ2tGaEIsZ0NEbEZnQjtBSDJHbEI7O0FJN0JBO0VBT00seUJEM0ZhO0FIcUhuQjs7QUlqQ0E7RUFZTSx5QkR6R1k7QUhrSWxCOztBSXJDQTtFQWdCSSxhQUFhO0FKeUJqQjs7QUl6Q0E7RUFrQk0sV0RwSE07RUkrQlYsd0VBNUJxRTtFQTZCckUsa0JBQWtCO0VBQ2xCLGdCQUFnQjtBUGlIbEI7O0FJaERBO0VBdUJJLGFBQWE7QUo2QmpCOztBSXBEQTtFQTBCUSxtQkFBbUI7QUo4QjNCOztBSXhEQTtFQTZCUSxrQkFBa0I7QUorQjFCOztBSTVEQTtFQStCVSxtQkFBbUI7QUppQzdCOztBUW5LQTs7O0VBR0UscUJBQXFCO0VBQ3JCLGNMRWdCO0FIb0tsQjs7QVExS0E7OztFQU1JLGNBQTZCO0VBQzdCLHFCQUFxQjtBUjBLekI7O0FRakxBOzs7RUZDRSxhRVF5QjtBUjhLM0I7O0FReEtBO0VIZEUsa0NBQWtDO0VBQ2xDLG1CQUFtQjtFQUNuQixjRkNXO0VFQVgsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixxQkFBcUI7RUFDckIsZUFQMEM7RUFRMUMsc0JBQXNCO0VBQ3RCLGVBQWU7RUNBZixpQ0FBWTtFQUFaLHlCQUFZO0VERVosZ0JBQWdCO0VBQ2hCLGtCQVo4RDtBTHNNaEU7O0FLekxFO0VBQ0UsbURBQThDO0VBQzlDLHFCQUFxQjtBTDRMekI7O0FTNU1BO0VBQ0UsbUJBQW1CO0FUK01yQjs7QVNoTkE7RUFHSSxrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLGtCQUFrQjtBVGlOdEI7O0FDdExBO0VBbEJFLHFEQUFxRDtFQUNyRCxnQkFBZ0I7RUFtQmhCLGVBQWU7QUQwTGpCOztBQ3BMQTs7Ozs7O0VBTUUsV0U3Q1U7RUY4Q1Ysd0JBN0N1QjtBRG9PekI7O0FDdkpBO0VBM0JFLGVBQWU7QURzTGpCOztBQ3ZKQTtFQTNCRSxlQUFlO0FEc0xqQjs7QUN2SkE7RUEzQkUsZUFBZTtFQTlDZixxREFBcUQ7RUFDckQsZ0JBQWdCO0FEcU9sQjs7QUN6SkE7RUExQkUseUJBQXlCO0VBQ3pCLGlCQUFpQjtFQUNqQixZQUFZO0FEdUxkOztBQzNKQTtFQXhCRSxpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZUFBZTtBRHVMakI7O0FDNUpBO0VBQVksaUJBQWlCO0FEZ0s3Qjs7QUMvSkE7RUFBSyxrQkFBa0I7QURtS3ZCOztBQ2pLQTtFQUNFLHdCQXhHdUI7RUF5R3ZCLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGNBQWM7QURvS2hCOztBQ2pLQTtFQUNFLHlCQUF5QjtBRG9LM0I7O0FDaktBO0VBQ0Usa0JBQWtCO0FEb0twQjs7QUNqS0E7RUFFSSxZQUFZO0FEbUtoQjs7QURsUUEseUNBQUEiLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vSW1wb3J0IGJyZWFrcG9pbnQgJiBTdXN5IHRoZSBuZXcgd2F5XG4gIEBpbXBvcnQgXCJub2RlX21vZHVsZXMvYnJlYWtwb2ludC1zYXNzL3N0eWxlc2hlZXRzL2JyZWFrcG9pbnRcIjtcbiAgQGltcG9ydCBcIm5vZGVfbW9kdWxlcy9zdXN5L3Nhc3Mvc3VzeVwiO1xuXG4vKiBJbXBvcnQgdmFyaWFibGVzLCBhYnN0cmFjdGlvbnMsIGJhc2Ugc3R5bGVzIGFuZCBjb21wb25lbnRzIHVzaW5nIGdsb2JiaW5nLlxuXG4gR2xvYmJpbmcgd2lsbCBhbHdheXMgaW1wb3J0IGZpbGVzIGFscGhhYmV0aWNhbGx5LiBPcHRpbWFsbHksIGFsbCB5b3VyXG4gY29tcG9uZW50cyBzaG91bGQgYmUgc2VsZi1jb250YWluZWQgYW5kIGV4cGxpY2l0IGVub3VnaCB0byBub3QgaGF2ZSBhbnlcbiBjb250YWluZWQgc3R5bGVzIGxlYWsgaW50byB1bnJlbGF0ZWQgY29tcG9uZW50czogVGhlIGltcG9ydCBvcmRlciBzaG91bGQgbm90XG4gYWZmZWN0IHRoZSByZXN1bHQuXG5cbiBJZiB0aGVyZSBhcmUgdmFyaWFibGVzLCBmdW5jdGlvbnMgb3IgbWl4aW5zIHRoYXQgZGVwZW5kIG9uIGVhY2ggb3RoZXIgYW5kXG4gdGhlcmVmb3JlIG5lZWQgdG8gYmUgaW1wb3J0ZWQgaW4gYSBzcGVjaWZpYyBvcmRlciB5b3UgY2FuIGltcG9ydCB0aGVtXG4gZGlyZWN0bHkuIFZhcmlhYmxlcy0sIGZ1bmN0aW9uLSBvciBtaXhpbiBwcm92aWRpbmcgcGFydGlhbHMgc2hvdWxkIG5ldmVyXG4gb3V0cHV0IGFueSBzdHlsZXMgdGhlbXNlbHZlczogSW1wb3J0aW5nIHRoZW0gbXVsdGlwbGUgdGltZXMgdG8gcmVzb2x2ZVxuIGRlcGVuZGVuY2llcyBzaG91bGRuJ3QgYmUgYSBwcm9ibGVtLlxuKi9cbkBpbXBvcnQgXCJ1dGlsL19taXhpbnNfbGVnYWN5LnNjc3NcIjtcblxuQGltcG9ydCBcInNldHRpbmdzL19icmVha3BvaW50cy5zY3NzXCI7XG5AaW1wb3J0IFwic2V0dGluZ3MvX2NvbG9ycy5zY3NzXCI7XG5AaW1wb3J0IFwic2V0dGluZ3MvX2ZvbnRzLnNjc3NcIjtcbkBpbXBvcnQgXCJzZXR0aW5ncy9fZ3JpZC5zY3NzXCI7XG5cbkBpbXBvcnQgXCJiYXNlL19idXR0b25zLnNjc3NcIjtcbkBpbXBvcnQgXCJiYXNlL19mb3Jtcy5zY3NzXCI7XG5AaW1wb3J0IFwiYmFzZS9fbGlua3Muc2Nzc1wiO1xuQGltcG9ydCBcImJhc2UvX2xpc3RzLnNjc3NcIjtcbkBpbXBvcnQgXCJiYXNlL190eXBvZ3JhcGh5LnNjc3NcIjtcblxuLyogTm8gZmlsZXMgdG8gaW1wb3J0IGZvdW5kIGluIHBhZ2VzLy8qICovXG5AaW1wb3J0IFwiY29tcG9uZW50cy9fZm9vdGVyLnNjc3NcIjtcbkBpbXBvcnQgXCJjb21wb25lbnRzL19oZWFkZXIuc2Nzc1wiO1xuIiwiLyogSW1wb3J0IHZhcmlhYmxlcywgYWJzdHJhY3Rpb25zLCBiYXNlIHN0eWxlcyBhbmQgY29tcG9uZW50cyB1c2luZyBnbG9iYmluZy5cblxuIEdsb2JiaW5nIHdpbGwgYWx3YXlzIGltcG9ydCBmaWxlcyBhbHBoYWJldGljYWxseS4gT3B0aW1hbGx5LCBhbGwgeW91clxuIGNvbXBvbmVudHMgc2hvdWxkIGJlIHNlbGYtY29udGFpbmVkIGFuZCBleHBsaWNpdCBlbm91Z2ggdG8gbm90IGhhdmUgYW55XG4gY29udGFpbmVkIHN0eWxlcyBsZWFrIGludG8gdW5yZWxhdGVkIGNvbXBvbmVudHM6IFRoZSBpbXBvcnQgb3JkZXIgc2hvdWxkIG5vdFxuIGFmZmVjdCB0aGUgcmVzdWx0LlxuXG4gSWYgdGhlcmUgYXJlIHZhcmlhYmxlcywgZnVuY3Rpb25zIG9yIG1peGlucyB0aGF0IGRlcGVuZCBvbiBlYWNoIG90aGVyIGFuZFxuIHRoZXJlZm9yZSBuZWVkIHRvIGJlIGltcG9ydGVkIGluIGEgc3BlY2lmaWMgb3JkZXIgeW91IGNhbiBpbXBvcnQgdGhlbVxuIGRpcmVjdGx5LiBWYXJpYWJsZXMtLCBmdW5jdGlvbi0gb3IgbWl4aW4gcHJvdmlkaW5nIHBhcnRpYWxzIHNob3VsZCBuZXZlclxuIG91dHB1dCBhbnkgc3R5bGVzIHRoZW1zZWx2ZXM6IEltcG9ydGluZyB0aGVtIG11bHRpcGxlIHRpbWVzIHRvIHJlc29sdmVcbiBkZXBlbmRlbmNpZXMgc2hvdWxkbid0IGJlIGEgcHJvYmxlbS5cbiovXG5AaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9T3BlbitTYW5zOjQwMCwzMDAsNjAwLDcwMCk7XG4uZ3JpZCB7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkZGRkZGQ7XG59XG5cbio6Zm9jdXMge1xuICBvdXRsaW5lOiAwO1xufVxuXG4uZ3JpcHBpZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbmJ1dHRvbixcbmlucHV0W3R5cGU9XCJidXR0b25cIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdLFxuaW5wdXRbdHlwZT1cInRleHRcIl0sXG5pbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0sXG5pbnB1dFt0eXBlPVwiZGF0ZXRpbWVcIl0sXG5pbnB1dFt0eXBlPVwiZGF0ZXRpbWUtbG9jYWxcIl0sXG5pbnB1dFt0eXBlPVwiZGF0ZVwiXSxcbmlucHV0W3R5cGU9XCJtb250aFwiXSxcbmlucHV0W3R5cGU9XCJ0aW1lXCJdLFxuaW5wdXRbdHlwZT1cIndlZWtcIl0sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdLFxuaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxuaW5wdXRbdHlwZT1cInVybFwiXSxcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0sXG5pbnB1dFt0eXBlPVwidGVsXCJdLFxuaW5wdXRbdHlwZT1cImNvbG9yXCJdIHtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuYnV0dG9uLFxuaW5wdXRbdHlwZT1cImJ1dHRvblwiXSxcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDApO1xuICBib3JkZXI6IDEuNXB4IHNvbGlkO1xuICBjb2xvcjogIzA1NTg4NTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LXNpemU6IDE1cHg7XG4gIGxldHRlci1zcGFjaW5nOiAwLjA1ZW07XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgbGluZS1oZWlnaHQ6IDFlbTtcbiAgcGFkZGluZzogMTJweCAzMHB4O1xufVxuXG5idXR0b246aG92ZXIsXG5pbnB1dFt0eXBlPVwiYnV0dG9uXCJdOmhvdmVyLFxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNSwgODgsIDEzMywgMC4yKSAhaW1wb3J0YW50O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbmlucHV0W3R5cGU9XCJ0ZXh0XCJdLmZvcm0tY29udHJvbCxcbmlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSxcbmlucHV0W3R5cGU9XCJlbWFpbFwiXSxcbnRleHRhcmVhIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG5pbnB1dFt0eXBlPVwidGV4dFwiXS5mb3JtLWNvbnRyb2wsXG5pbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0uZm9ybS1jb250cm9sLFxuaW5wdXRbdHlwZT1cImVtYWlsXCJdLmZvcm0tY29udHJvbCxcbnRleHRhcmVhIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyLWNvbG9yOiAjZGRkZGRkO1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItd2lkdGg6IDFweDtcbiAgY29sb3I6ICMwMDA7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDFlbTtcbn1cblxuaW5wdXRbdHlwZT1cInRleHRcIl0uZm9ybS1jb250cm9sOmZvY3VzLFxuaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLmZvcm0tY29udHJvbDpmb2N1cyxcbmlucHV0W3R5cGU9XCJlbWFpbFwiXS5mb3JtLWNvbnRyb2w6Zm9jdXMsXG50ZXh0YXJlYTpmb2N1cyB7XG4gIGJvcmRlci1jb2xvcjogIzA1NTg4NTtcbn1cblxuaW5wdXRbdHlwZT1cInRleHRcIl0uZm9ybS1jb250cm9sLmVycm9yLFxuaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLmZvcm0tY29udHJvbC5lcnJvcixcbmlucHV0W3R5cGU9XCJlbWFpbFwiXS5mb3JtLWNvbnRyb2wuZXJyb3IsXG50ZXh0YXJlYS5lcnJvciB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkNTJhMzIgIWltcG9ydGFudDtcbn1cblxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLmVycm9yICsgbGFiZWwub3B0aW9uIHNwYW4sXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0uZXJyb3IgKyBsYWJlbC5vcHRpb24gc3BhbiB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkNTJhMzI7XG59XG5cbmxhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xufVxuXG4uZm9ybS1yZXF1aXJlZCB7XG4gIGNvbG9yOiAjZDUyYTMyO1xufVxuXG50ZXh0YXJlYSB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgbWluLWhlaWdodDogNDAwcHg7XG59XG5cbi5mb3JtLXdyYXBwZXIge1xuICBtYXgtd2lkdGg6IDM1JTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBib3gtc2hhZG93OiAycHggNXB4IDIwcHggI2EwOWQ5ZDtcbn1cblxuLmZvcm0td3JhcHBlci5zaWdudXAgLmZvcm0taGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE1NmViYjtcbn1cblxuLmZvcm0td3JhcHBlci5zaWduaW4gLmZvcm0taGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2JjMzg2OTtcbn1cblxuLmZvcm0td3JhcHBlciAuZm9ybS1oZWFkZXIge1xuICBwYWRkaW5nOiAyMHB4O1xufVxuXG4uZm9ybS13cmFwcGVyIC5mb3JtLWhlYWRlciBoMiwgLmZvcm0td3JhcHBlciAuZm9ybS1oZWFkZXIgcCB7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LWZhbWlseTogXCJvcGVuLXNhbnNcIiwgQXJpYWwsIFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi5mb3JtLXdyYXBwZXIgLmZvcm0tYm9keSB7XG4gIHBhZGRpbmc6IDIwcHg7XG59XG5cbi5mb3JtLXdyYXBwZXIgLmZvcm0tYm9keSBmb3JtIC5pbnB1dC13cmFwcGVyIHtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLmZvcm0td3JhcHBlciAuZm9ybS1ib2R5IGZvcm0gLmJ0bi13cmFwcGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uZm9ybS13cmFwcGVyIC5mb3JtLWJvZHkgZm9ybSAuYnRuLXdyYXBwZXIgaW5wdXQsIC5mb3JtLXdyYXBwZXIgLmZvcm0tYm9keSBmb3JtIC5idG4td3JhcHBlciBzcGFuLCAuZm9ybS13cmFwcGVyIC5mb3JtLWJvZHkgZm9ybSAuYnRuLXdyYXBwZXIgYSB7XG4gIG1hcmdpbjogMCBhdXRvIDEwcHg7XG59XG5cbmEsXG5hOmxpbmssXG5hOnZpc2l0ZWQge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAjYmMzODY5O1xufVxuXG5hOmhvdmVyLFxuYTpsaW5rOmhvdmVyLFxuYTp2aXNpdGVkOmhvdmVyIHtcbiAgY29sb3I6ICNjZTU5ODU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuYTpob3ZlciBpbWcsXG5hOmxpbms6aG92ZXIgaW1nLFxuYTp2aXNpdGVkOmhvdmVyIGltZyB7XG4gIG9wYWNpdHk6IDAuNzU7XG59XG5cbmEuYnRuLWRhbmdlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG4gIGJvcmRlcjogMS41cHggc29saWQ7XG4gIGNvbG9yOiAjZDUyYTMyO1xuICBmb250LXdlaWdodDogNjAwO1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDVlbTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICBsaW5lLWhlaWdodDogMWVtO1xuICBwYWRkaW5nOiAxMnB4IDMwcHg7XG59XG5cbmEuYnRuLWRhbmdlcjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjEzLCA0MiwgNTAsIDAuMikgIWltcG9ydGFudDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG51bCwgb2wge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG51bCBsaSwgb2wgbGkge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGxlZnQ6IDIwcHg7XG4gIG1hcmdpbi1ib3R0b206IDZweDtcbn1cblxuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJyxIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE4cHg7XG59XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gIGNvbG9yOiAjMDAwO1xuICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIjtcbn1cblxuaDEge1xuICBmb250LXNpemU6IDM2cHg7XG59XG5cbmgyIHtcbiAgZm9udC1zaXplOiAyNHB4O1xufVxuXG5oMyB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnLEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5cbmg0IHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gIGhlaWdodDogMzBweDtcbn1cblxuaDUge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbGluZS1oZWlnaHQ6IDIuNTtcbiAgaGVpZ2h0OiA2MHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMzBweDtcbn1cblxuYiwgc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbmVtIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG5wIHtcbiAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zXCI7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC13ZWlnaHQ6IDEwMDtcbiAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gIG1hcmdpbjogMjBweCAwO1xufVxuXG5zdXAsIHN1YiB7XG4gIGZvbnQtc2l6ZTogNzUlICFpbXBvcnRhbnQ7XG59XG5cbmhlYWRlciwgZm9vdGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5oZWFkZXIgLmlubmVyLCBtYWluIC5pbm5lciwgZm9vdGVyIC5pbm5lciB7XG4gIG1hcmdpbjogMjBweDtcbn1cblxuLyogTm8gZmlsZXMgdG8gaW1wb3J0IGZvdW5kIGluIHBhZ2VzLy8qICovXG4iLCIvLyBGT05UIElOQ0xVREVTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5AaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9T3BlbitTYW5zOjQwMCwzMDAsNjAwLDcwMCk7XG4kZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuXG5cbi8vIEZPTlQgTUlYSU5TXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5AbWl4aW4gZm9udC1saWdodCB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJyxIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogMzAwO1xufVxuXG5AbWl4aW4gZm9udC1yZWd1bGFyIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnLEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5cbkBtaXhpbiBmb250LXNlbWlib2xkIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnLEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG59XG5cbkBtaXhpbiBmb250LWJvbGQge1xuICBmb250LWZhbWlseTogJ09wZW4gU2FucycsSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuXG4vLyBCQVNFIEZPTlRcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmh0bWwge1xuICBAaW5jbHVkZSBmb250LXJlZ3VsYXI7XG4gIGZvbnQtc2l6ZTogMThweDtcbn1cblxuXG4vLyBIRUFERVIgU1RZTEVTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgY29sb3I6ICRibGFjaztcbiAgZm9udC1mYW1pbHk6ICRmb250LWZhbWlseTtcbn1cblxuXG5AbWl4aW4gaDEge1xuICBmb250LXNpemU6IDM2cHg7XG59XG5cbkBtaXhpbiBoMiB7XG4gIGZvbnQtc2l6ZTogMjRweDtcbn1cblxuQG1peGluIGgzIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBAaW5jbHVkZSBmb250LXJlZ3VsYXI7XG59XG5cbkBtaXhpbiBoNCB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICBoZWlnaHQ6IDMwcHg7XG59XG5cbkBtaXhpbiBoNSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBsaW5lLWhlaWdodDogMi41O1xuICBoZWlnaHQ6IDYwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAzMHB4O1xufVxuXG5cbmgxIHtcbiAgQGluY2x1ZGUgaDE7XG59XG5cbmgyIHtcbiAgQGluY2x1ZGUgaDI7XG59XG5cbmgzIHtcbiAgQGluY2x1ZGUgaDM7XG59XG5cbmg0IHtcbiAgQGluY2x1ZGUgaDQ7XG59XG5cbmg1e1xuICBAaW5jbHVkZSBoNTtcbn1cblxuXG4vLyBURVhUIFNUWUxFU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmIsIHN0cm9uZyB7IGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5lbSB7IGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG5we1xuICBmb250LWZhbWlseTogJGZvbnQtZmFtaWx5O1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtd2VpZ2h0OiAxMDA7XG4gIGxpbmUtaGVpZ2h0OiAyNHB4O1xuICBtYXJnaW46IDIwcHggMDtcbn1cblxuc3VwLCBzdWIge1xuICBmb250LXNpemU6IDc1JSAhaW1wb3J0YW50O1xufVxuXG5oZWFkZXIsIGZvb3RlcntcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5oZWFkZXIsIG1haW4sIGZvb3RlcntcbiAgLmlubmVye1xuICAgIG1hcmdpbjogMjBweDtcbiAgfVxufVxuIiwiLy8gR1VUVEVSU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiRndXR0ZXI6IDE1cHg7XG4kZ3V0dGVyMjogMzBweDtcblxuLy8gR0VORVJBTCBCUkVBS1BPSU5UU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi5ncmlkIHtcbiAgcGFkZGluZzogMTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGdyZXk7XG59XG4iLCIvLyBNT1NUIENPTU1PTkxZIFVTRUQgQ09MT1JTIFRIUk9VR0hPVVQgVEhFTUVcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiRibGFjazogIzAwMDtcbiR3aGl0ZTogI2ZmZjtcbiRncmV5OiAjZGRkZGRkO1xuJGdyZWVuOiAjMDk4OTZmO1xuJHJlZDogI2Q1MmEzMjtcbiRibHVlOiAjMDU1ODg1O1xuJGJ1cmd1bmR5OiAjYmMzODY5O1xuXG5cbiRsaW5rOiAkYnVyZ3VuZHk7XG5cblxuJGdyZWVuLXJnYmE6IHJnYmEoOSwgMTM3LCAxMTEsMC45MCk7XG5cblxuJGZvcm0tYmx1ZTogIzE1NmViYjtcblxuXG4kbGlnaHQtYnJvd246ICM5OTdkNjY7XG4kbGlnaHQtYmx1ZTogIzg2Y2NkNTtcbiRsaWdodC1ncmV5OiAjZWZlZmVmO1xuJGJveC1ncmV5OiAjYTA5ZDlkO1xuJGZvY3VzLWNvbG9yOiAkYmx1ZTtcbiRmb2N1czogJGZvY3VzLWNvbG9yO1xuXG4kYm9keS10ZXh0OiAkYmxhY2s7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT1cbi8vIERFRkFVTFQgU1lTVEVNIENPTE9SU1xuXG4kc3lzdGVtX19waW5rOiAjRjlENURCOyAvLyBGb3IgZXJyb3JzIGkuZS5cbiRzeXN0ZW1fX2JsdWU6ICNEOUVERjc7IC8vIEZvciBzeXN0ZW0gbWVzc2FnZXMgaS5lLlxuIiwiLy8gUkVNT1ZFIEJST1dTRVIgREVGQVVMVCBGT0NVUyBTVEFURVNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4qOmZvY3VzIHtcbiAgb3V0bGluZTogMDtcbn1cblxuXG4vLyBISURFIEdSSVBQSUVcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4uZ3JpcHBpZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8vIFJFTU9WRSBXRUJLSVQnUyBBU1NVTVBUSU9OUyBBQk9VVCBPVVIgQlVUVE9OUyFcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5idXR0b24sXG5pbnB1dFt0eXBlPVwiYnV0dG9uXCJdLFxuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSxcbmlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLFxuaW5wdXRbdHlwZT1cImRhdGV0aW1lXCJdLFxuaW5wdXRbdHlwZT1cImRhdGV0aW1lLWxvY2FsXCJdLFxuaW5wdXRbdHlwZT1cImRhdGVcIl0sXG5pbnB1dFt0eXBlPVwibW9udGhcIl0sXG5pbnB1dFt0eXBlPVwidGltZVwiXSxcbmlucHV0W3R5cGU9XCJ3ZWVrXCJdLFxuaW5wdXRbdHlwZT1cIm51bWJlclwiXSxcbmlucHV0W3R5cGU9XCJlbWFpbFwiXSxcbmlucHV0W3R5cGU9XCJ1cmxcIl0sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdLFxuaW5wdXRbdHlwZT1cInRlbFwiXSxcbmlucHV0W3R5cGU9XCJjb2xvclwiXVxue1xuICBhcHBlYXJhbmNlOiBub25lO1xufVxuXG5idXR0b24sXG5pbnB1dFt0eXBlPVwiYnV0dG9uXCJdLFxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXVxue1xuICBAaW5jbHVkZSBidXR0b24oJGJsdWUpO1xufVxuXG5cbi8vIFNUQU5EQVJEIEZPUk0gU1RZTEVTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuaW5wdXRbdHlwZT1cInRleHRcIl0uZm9ybS1jb250cm9sLFxuaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLFxuaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxudGV4dGFyZWFcbntcbiAgbWF4LXdpZHRoOiAxMDAlO1xuXG59XG5cbi8vIEVSUk9SXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuaW5wdXRbdHlwZT1cInRleHRcIl0uZm9ybS1jb250cm9sLFxuaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLmZvcm0tY29udHJvbCxcbmlucHV0W3R5cGU9XCJlbWFpbFwiXS5mb3JtLWNvbnRyb2wsXG50ZXh0YXJlYVxue1xuICBAaW5jbHVkZSB0ZXh0LWlucHV0KCk7XG4gICYuZXJyb3Ige1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICRyZWQgIWltcG9ydGFudDtcbiAgfVxufVxuXG5cbi8vRXJyb3Igc3R5bGluZyBmb3IgUmFkaW8gJiBDaGVja2JveFxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLmVycm9yICsgbGFiZWwub3B0aW9uIHNwYW4sXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0uZXJyb3IgKyBsYWJlbC5vcHRpb24gc3Bhblxue1xuICBib3JkZXI6IDFweCBzb2xpZCAkcmVkO1xufVxuXG4vLyBGT1JNIExBQkVMU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmxhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xufVxuXG4vLyBSRVFVSVJFRCBDT0xPUlxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi5mb3JtLXJlcXVpcmVkIHtcbiAgY29sb3I6ICRyZWQ7XG59XG5cbi8vIFRFWFRBUkVBXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxudGV4dGFyZWEge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IDQwMHB4O1xufVxuXG5cbi8vIE1BSU4gRk9STSBTVFlMSU5HXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5cbi5mb3JtLXdyYXBwZXJ7XG4gIG1heC13aWR0aDogMzUlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGJveC1zaGFkb3c6IDJweCA1cHggMjBweCAkYm94LWdyZXk7XG4gICYuc2lnbnVwe1xuICAgIC5mb3JtLWhlYWRlcntcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRmb3JtLWJsdWU7XG4gICAgfVxuICB9XG4gICYuc2lnbmlue1xuICAgIC5mb3JtLWhlYWRlcntcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRidXJndW5keTtcbiAgICB9XG4gIH1cbiAgLmZvcm0taGVhZGVye1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgaDIscCB7XG4gICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgQGluY2x1ZGUgZm9udC1ib2xkO1xuICAgIH1cbiAgfVxuICAuZm9ybS1ib2R5e1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgZm9ybXtcbiAgICAgIC5pbnB1dC13cmFwcGVye1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgICAgfVxuICAgICAgLmJ0bi13cmFwcGVye1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGlucHV0LCBzcGFuLCBhe1xuICAgICAgICAgIG1hcmdpbjogMCBhdXRvIDEwcHg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi8vIEJVVFRPTlNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbkBtaXhpbiBidXR0b24oJGNvbG9yOiRibGFjaywgJGZvbnQtc2l6ZToxNXB4LCAkcGFkZGluZzoxMnB4IDMwcHgpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwKTtcbiAgYm9yZGVyOiAxLjVweCBzb2xpZDtcbiAgY29sb3I6ICRjb2xvcjtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LXNpemU6ICRmb250LXNpemU7XG4gIGxldHRlci1zcGFjaW5nOiAwLjA1ZW07XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgQGluY2x1ZGUgdHJhbnNpdGlvbihhbGwgMC4zcyBlYXNlKTtcbiAgbGluZS1oZWlnaHQ6IDFlbTtcbiAgcGFkZGluZzogJHBhZGRpbmc7XG4gICY6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoJGNvbG9yLCAwLjIpICFpbXBvcnRhbnQ7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB9XG59XG5cbiIsIi8vIE1JWElNIExFR0FDWVxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuQG1peGluIG9wYWNpdHkoJHZhbCkge1xuICBvcGFjaXR5OiAkdmFsO1xufVxuXG5AbWl4aW4gYm9yZGVyLXJhZGl1cygkdmFsKSB7XG4gIGJvcmRlci1yYWRpdXM6ICR2YWw7XG59XG5cbkBtaXhpbiB0cmFuc2l0aW9uKCR2YWxzLi4uKSB7XG4gIHRyYW5zaXRpb246ICN7JHZhbHN9O1xufVxuXG5AbWl4aW4gdmVydGljYWwtYWxpZ24oJHBvc2l0aW9uOiByZWxhdGl2ZSwgJHRvcDogNTAlLCAkdHJhbnNsYXRlWTo1MCUpIHtcbiAgcG9zaXRpb246ICRwb3NpdGlvbjtcbiAgdG9wOiAkdG9wO1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtJHRyYW5zbGF0ZVkpO1xuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0kdHJhbnNsYXRlWSk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtJHRyYW5zbGF0ZVkpO1xufVxuXG5cbi8vIFRFWFQgSU5QVVQgRklFTERTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuQG1peGluIHRleHQtaW5wdXQoJGJvcmRlci1jb2xvcjogJGdyZXksJGJvcmRlci1mb2N1cy1jb2xvcjogJGZvY3VzLWNvbG9yKSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJvcmRlci1jb2xvcjogJGJvcmRlci1jb2xvcjtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyLXdpZHRoOiAxcHg7XG4gIGNvbG9yOiAkYm9keS10ZXh0O1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGxpbmUtaGVpZ2h0OiAxZW07XG4gICY6Zm9jdXMge1xuICAgIGJvcmRlci1jb2xvcjogJGJvcmRlci1mb2N1cy1jb2xvcjtcbiAgfVxufVxuXG5cbi8vIENMRUFSRklYIE1JWElOU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbkBtaXhpbiBjbGVhcmZpeCB7XG4gICY6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogdGFibGU7XG4gICAgY2xlYXI6IGJvdGg7XG4gIH1cbn1cblxuQG1peGluIGFmdGVyIHtcbiAgQGluY2x1ZGUgY2xlYXJmaXg7XG59XG5cblxuLy8gRkxFWEJPWCBSRUxBVEVEIE1JWElOU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuXG5AbWl4aW4gZmxleCB7XG4gIGRpc3BsYXk6IGZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbkBtaXhpbiBmbGV4LWJhc2lzKCR2YWwpIHtcbiAgZmxleC1iYXNpczogJHZhbDtcbn1cblxuQG1peGluIGFsaWduLWl0ZW1zKCR2YWwpIHtcbiAgYWxpZ24taXRlbXM6ICR2YWw7XG59XG5cbkBtaXhpbiBhbGlnbi1jb250ZW50KCR2YWwpIHtcbiAgYWxpZ24tY29udGVudDogJHZhbDtcbn1cblxuQG1peGluIGZsZXgtZ3JvdygkdmFsKSB7XG4gIGZsZXgtZ3JvdzogJHZhbDtcbn1cblxuQG1peGluIGp1c3RpZnktY29udGVudCgkdmFsKSB7XG4gIGp1c3RpZnktY29udGVudDogJHZhbDtcbn1cblxuQG1peGluIGZsZXgtd3JhcCgkdmFsKSB7XG4gIGZsZXgtd3JhcDogJHZhbDtcbn1cbiIsIi8vIEJBU0UgRk9OVCBWQVJJQUJMRVNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiRiYXNlLWZvbnQtc2l6ZTogICAgMTY7XG4kYmFzZS1saW5lLWhlaWdodDogIDI0O1xuXG5cbiRvcGVuLXNhbnM6IFwib3Blbi1zYW5zXCIsIEFyaWFsLCAnSGVsdmV0aWNhIE5ldWUnLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG5cbi8vIEZPTlQgSU5DTFVERVNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cblxuLy8gRk9OVCBNSVhJTlNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vL09wZW5zYW5zXG5AbWl4aW4gZm9udC1saWdodCB7XG4gIGZvbnQtZmFtaWx5OiAkb3Blbi1zYW5zO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG59XG5cbkBtaXhpbiBmb250LXJlZ3VsYXIge1xuICBmb250LWZhbWlseTogJG9wZW4tc2FucztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xufVxuXG5AbWl4aW4gZm9udC1zZW1pLWJvbGQge1xuICBmb250LWZhbWlseTogJG9wZW4tc2FucztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNjAwO1xufVxuXG5AbWl4aW4gZm9udC1ib2xkIHtcbiAgZm9udC1mYW1pbHk6ICRvcGVuLXNhbnM7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cbiIsIi8vIExJTksgU1RZTEVTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5hLFxuYTpsaW5rLFxuYTp2aXNpdGVkLCB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6ICRsaW5rO1xuICAmOmhvdmVyIHtcbiAgICBjb2xvcjogbGlnaHRlbigkYnVyZ3VuZHksMTAlKTs7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGltZyB7XG4gICAgICBAaW5jbHVkZSBvcGFjaXR5KDAuNzUpO1xuICAgIH1cbiAgfVxufVxuXG5cbmEuYnRuLWRhbmdlcntcbiAgQGluY2x1ZGUgYnV0dG9uKCRyZWQpO1xufVxuIiwiLy8gTElTVFMgU1RZTEVTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxudWwsIG9se1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICBsaXtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbGVmdDogMjBweDtcbiAgICBtYXJnaW4tYm90dG9tOiA2cHg7XG4gIH1cbn1cblxuIl19 */
