/* Import variables, abstractions, base styles and components using globbing.

 Globbing will always import files alphabetically. Optimally, all your
 components should be self-contained and explicit enough to not have any
 contained styles leak into unrelated components: The import order should not
 affect the result.

 If there are variables, functions or mixins that depend on each other and
 therefore need to be imported in a specific order you can import them
 directly. Variables-, function- or mixin providing partials should never
 output any styles themselves: Importing them multiple times to resolve
 dependencies shouldn't be a problem.
*/
@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,300,600,700);
.grid {
  padding: 10px;
  background-color: #7c7c7c;
}

form .link {
  color: #86ccd5;
  background-color: #86ccd5;
  font-size: 13px;
}

html {
  font-family: 'Open Sans',Helvetica, Arial, sans-serif;
  font-weight: 400;
  font-size: 18px;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: #000;
}

h1 {
  font-family: "Open Sans";
  font-size: 36px;
}

h2 {
  font-family: "Open Sans";
  font-size: 24px;
}

h3 {
  font-family: "Open Sans";
  font-size: 16px;
  font-family: 'Open Sans',Helvetica, Arial, sans-serif;
  font-weight: 400;
}

h4 {
  font-family: "Open Sans";
  text-transform: uppercase;
  line-height: 20px;
  height: 30px;
}

h5 {
  font-weight: bold;
  line-height: 2.5;
  height: 60px;
  text-align: center;
  font-size: 30px;
}

b, strong {
  font-weight: bold;
}

em {
  font-style: italic;
}

p {
  font-family: "Open Sans";
  font-size: 16px;
  font-weight: 100;
  line-height: 24px;
  margin: 20px 0;
}

sup, sub {
  font-size: 75% !important;
}

/* No files to import found in pages//* */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
